{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TeacherService = /*#__PURE__*/(() => {\n  class TeacherService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getStudents(username) {\n      console.log('In teacher service, id is = ' + username);\n      let students = this.http.get('/api/v1/teacher/' + username);\n      return students;\n    }\n\n    deleteStudent(username) {\n      let deletedStudent = this.http.delete('/api/v1/student/' + username);\n      return deletedStudent;\n    }\n\n    addStudent(first, last, username, password, teacher) {\n      let student = {\n        'name': first + ' ' + last,\n        'email': username,\n        'password': password\n      };\n      let headers = {\n        'content-type': 'application/json'\n      };\n      this.http.post('/api/v1/newStudent/' + teacher, student, {\n        'headers': headers\n      }).subscribe(res => {\n        console.log(res);\n        this.newStudent = res;\n\n        if (Object.keys(res)[0] == 'error') {\n          alert('An Account with this email already exists!');\n        } else {\n          window.location.href = '/teacher/' + teacher;\n        }\n      });\n    }\n\n    addTeacher(first, last, username, password, teacher) {\n      let newTeach = {\n        'name': first + ' ' + last,\n        'email': username,\n        'password': password\n      };\n      let headers = {\n        'content-type': 'application/json'\n      };\n      this.http.post('/api/v1/newTeacher', newTeach, {\n        'headers': headers\n      }).subscribe(res => {\n        console.log(res);\n        this.newTeacher = res;\n\n        if (Object.keys(res)[0] == 'error') {\n          alert('An Account with this email already exists!');\n        } else {\n          window.location.href = '/teacher/' + teacher;\n        }\n      });\n    }\n\n    getName(teacher) {\n      let name = this.http.get('/api/v1/getName/' + teacher);\n      return name;\n    }\n\n  }\n\n  TeacherService.ɵfac = function TeacherService_Factory(t) {\n    return new (t || TeacherService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TeacherService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TeacherService,\n    factory: TeacherService.ɵfac,\n    providedIn: 'root'\n  });\n  return TeacherService;\n})();","map":null,"metadata":{},"sourceType":"module"}