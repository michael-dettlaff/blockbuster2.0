{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n    }\n\n    login(email, pass) {\n      let user = {\n        'email': email,\n        'password': pass\n      };\n      let headers = {\n        'content-type': 'application/json'\n      };\n      this.http.post('/api/v1/login', user, {\n        'headers': headers\n      }).subscribe(res => {\n        console.log(res);\n\n        if (Object.keys(res)[0] == 'error') {\n          alert('Unsucessful Login. Please Try Again!');\n        } else {\n          if (Object.keys(res)[0] == 'Teacher') {\n            this.router.navigate(['/teacher/' + email]);\n          } else {\n            this.router.navigate(['/student/' + email]);\n          }\n        }\n      });\n    }\n\n    createNewAcc(teacher, first, last, email, password) {\n      let student = {\n        'name': first + ' ' + last,\n        'email': email,\n        'password': password\n      };\n      let headers = {\n        'content-type': 'application/json'\n      };\n      this.http.post('/api/v1/newStudent/' + teacher, student, {\n        'headers': headers\n      }).subscribe(res => {\n        console.log(res);\n\n        if (Object.keys(res)[0] == 'error') {\n          alert('An Account with this email already exists!');\n        } else if (Object.keys(res)[0] == 'noTeacher') {\n          alert('This Teacher does not exist!');\n        } else {\n          this.router.navigate(['/']); //window.location.href = '/';\n        }\n      });\n    }\n\n    logout() {\n      let user = {\n        'user': 'logout'\n      };\n      this.http.post('/api/v1/logout', user).subscribe(res => {\n        this.router.navigate(['/login']); //window.location.href = '/login';\n      });\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}