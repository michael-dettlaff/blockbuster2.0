{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\dettl\\\\Downloads\\\\402 misc\\\\mock-final\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TeacherComponent = class TeacherComponent {\n  constructor(teacherService) {\n    this.teacherService = teacherService;\n  }\n\n  ngOnInit() {\n    this.getMyStudents();\n  }\n\n  getMyStudents() {\n    let params = new URLSearchParams(window.location.search);\n    let username = params.get('username');\n    console.log('user is ' + username);\n    this.teacherService.getStudents(username).subscribe(studs => {\n      console.log(studs);\n      this.students = studs;\n    });\n  }\n\n  onSubmit(f) {\n    console.log('form clicked, Username: ' + f.value['username'] + ' ' + 'Password: ' + f.value['password']);\n    this.addStudent(f.value['username'], f.value['password']);\n  } // making a post to add student into the database\n\n\n  addStudent(username, password) {\n    return _asyncToGenerator(function* () {\n      let student = {\n        'email': username,\n        'password': password\n      };\n      let options = {\n        method: \"POST\",\n        body: JSON.stringify({\n          query: student\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      let params = new URLSearchParams(window.location.search);\n      let teacherID = params.get('tid');\n      let responseObj = yield fetch(`/api/v1/newStudent/${teacherID}`, options);\n      let data = yield responseObj.json();\n      console.log(data);\n    })();\n  }\n\n};\nTeacherComponent = __decorate([Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})], TeacherComponent);\nexport { TeacherComponent };","map":{"version":3,"sources":["C:/Users/dettl/Downloads/402 misc/mock-final/client/src/app/teacher/teacher.component.ts"],"names":["__decorate","Component","TeacherComponent","constructor","teacherService","ngOnInit","getMyStudents","params","URLSearchParams","window","location","search","username","get","console","log","getStudents","subscribe","studs","students","onSubmit","f","value","addStudent","password","student","options","method","body","JSON","stringify","query","headers","teacherID","responseObj","fetch","data","json","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,IAAIC,gBAAgB,GAAG,MAAMA,gBAAN,CAAuB;AAC1CC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AACxB,SAAKA,cAAL,GAAsBA,cAAtB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,aAAL;AACH;;AACDA,EAAAA,aAAa,GAAG;AACZ,QAAIC,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAb;AACA,QAAIC,QAAQ,GAAGL,MAAM,CAACM,GAAP,CAAW,UAAX,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,QAAzB;AACA,SAAKR,cAAL,CAAoBY,WAApB,CAAgCJ,QAAhC,EACIK,SADJ,CACcC,KAAK,IAAI;AACnBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,WAAKC,QAAL,GAAgBD,KAAhB;AACH,KAJD;AAKH;;AACDE,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACRP,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BM,CAAC,CAACC,KAAF,CAAQ,UAAR,CAA7B,GAAmD,GAAnD,GAAyD,YAAzD,GAAwED,CAAC,CAACC,KAAF,CAAQ,UAAR,CAApF;AACA,SAAKC,UAAL,CAAgBF,CAAC,CAACC,KAAF,CAAQ,UAAR,CAAhB,EAAqCD,CAAC,CAACC,KAAF,CAAQ,UAAR,CAArC;AACH,GApByC,CAqB1C;;;AACMC,EAAAA,UAAU,CAACX,QAAD,EAAWY,QAAX,EAAqB;AAAA;AACjC,UAAIC,OAAO,GAAG;AAAE,iBAASb,QAAX;AAAqB,oBAAYY;AAAjC,OAAd;AACA,UAAIE,OAAO,GAAG;AACVC,QAAAA,MAAM,EAAE,MADE;AAEVC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,KAAK,EAAEN;AAAT,SAAf,CAFI;AAGVO,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAHC,OAAd;AAOA,UAAIzB,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAb;AACA,UAAIsB,SAAS,GAAG1B,MAAM,CAACM,GAAP,CAAW,KAAX,CAAhB;AACA,UAAIqB,WAAW,SAASC,KAAK,CAAE,sBAAqBF,SAAU,EAAjC,EAAoCP,OAApC,CAA7B;AACA,UAAIU,IAAI,SAASF,WAAW,CAACG,IAAZ,EAAjB;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;AAbiC;AAcpC;;AApCyC,CAA9C;AAsCAlC,gBAAgB,GAAGF,UAAU,CAAC,CAC1BC,SAAS,CAAC;AACNqC,EAAAA,QAAQ,EAAE,aADJ;AAENC,EAAAA,WAAW,EAAE,0BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,yBAAD;AAHL,CAAD,CADiB,CAAD,EAM1BtC,gBAN0B,CAA7B;AAOA,SAASA,gBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet TeacherComponent = class TeacherComponent {\r\n    constructor(teacherService) {\r\n        this.teacherService = teacherService;\r\n    }\r\n    ngOnInit() {\r\n        this.getMyStudents();\r\n    }\r\n    getMyStudents() {\r\n        let params = new URLSearchParams(window.location.search);\r\n        let username = params.get('username');\r\n        console.log('user is ' + username);\r\n        this.teacherService.getStudents(username).\r\n            subscribe(studs => {\r\n            console.log(studs);\r\n            this.students = studs;\r\n        });\r\n    }\r\n    onSubmit(f) {\r\n        console.log('form clicked, Username: ' + f.value['username'] + ' ' + 'Password: ' + f.value['password']);\r\n        this.addStudent(f.value['username'], f.value['password']);\r\n    }\r\n    // making a post to add student into the database\r\n    async addStudent(username, password) {\r\n        let student = { 'email': username, 'password': password };\r\n        let options = {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ query: student }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        let params = new URLSearchParams(window.location.search);\r\n        let teacherID = params.get('tid');\r\n        let responseObj = await fetch(`/api/v1/newStudent/${teacherID}`, options);\r\n        let data = await responseObj.json();\r\n        console.log(data);\r\n    }\r\n};\r\nTeacherComponent = __decorate([\r\n    Component({\r\n        selector: 'app-teacher',\r\n        templateUrl: './teacher.component.html',\r\n        styleUrls: ['./teacher.component.css']\r\n    })\r\n], TeacherComponent);\r\nexport { TeacherComponent };\r\n"]},"metadata":{},"sourceType":"module"}